name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out code
      - uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      # Step 3: Set up Environment Variables
      - name: Set up Environment Variables
        run: |
          echo "SERVER_HOSTNAME=${{ secrets.SERVER_HOSTNAME }}" >> $GITHUB_ENV
          echo "HTTP_PATH=${{ secrets.HTTP_PATH }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN=${{ secrets.DE_DATABRICKS }}" >> $GITHUB_ENV
          echo "MOCK_ENV=true" >> $GITHUB_ENV  # Enable mock mode for queries

      # Step 4: Install dependencies
      - name: Install packages
        run: make install

      # Step 5: Lint the code
      - name: Lint
        run: make lint

      # Step 6: Extract data
      - name: Extract
        run: make extract

      # Step 7: Transform and load data
      - name: Transform and Load
        run: make transform_load

      # Step 8: Query data
      - name: Query
        run: make query

      # Step 9: Test the code
      - name: Test
        run: make test

      # Step 10: Format the code
      - name: Format
        run: make format

      # Step 11: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 12: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: tursunait/spark-python-app:latest

      # Step 13: Deploy
      - name: Deploy
        run: make deploy
